var u=Object.defineProperty,f=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var d=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable;var a=(s,e,r)=>e in s?u(s,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):s[e]=r,t=(s,e)=>{for(var r in e||(e={}))n.call(e,r)&&a(s,r,e[r]);if(d)for(var r of d(e))g.call(e,r)&&a(s,r,e[r]);return s},l=(s,e)=>f(s,c(e));import{k as o}from"./index-831af9dd.js";const p={list(s){return o.get({url:"/desform/data/list",params:s},{successMessageMode:"none",errorMessageMode:"modal",isTransformResponse:!1})},getColumns(s,e,r){return o.get({url:"/desform/getColumns",params:t({desformCode:s},e)},t({errorMessageMode:"modal"},r))},delete:(s,e)=>p.batchDelete(s,[e]),batchDelete(s,e){return o.delete({url:"/desform/data/${desformCode}/deleteBatch".replace("${desformCode}",s),params:{ids:e.join(",")}},{joinParamsToUrl:!0})}},i=(s,e,r,m)=>o.put({url:`/desform/api/${s}/updateWidget`,params:l(t({},e),{action:r,widget:m})});export{p,i as u};
